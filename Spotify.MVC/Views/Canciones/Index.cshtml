@using System.Security.Claims
@using Spotify.MVC.ViewModels

@{
    ViewData["Title"] = "Tus Canciones";
}

<h2 class="text-center text-success">Tu Biblioteca de Canciones</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@model IEnumerable<Spotify.Modelos.Cancion>

@if (ViewBag.Message != null)
{
    <div class="alert alert-warning">
        @Html.Raw(ViewBag.Message)  <!-- Muestra el mensaje si se ha alcanzado el límite -->
    </div>
}

<table class="table table-striped align-middle">
    <thead>
        <tr>
            <th>Código</th>
            <th>Título</th>
            <th>Duración</th>
            <th>Género</th>
            <th>Reproducción</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Titulo</td>
                <td>@item.Duracion.ToString(@"hh\:mm\:ss")</td>
                <td>@item.Genero</td>
                <td>
                    @* Reproductor de audio *@
                    <audio controls class="audio-player" data-id="@item.Id" style="max-width:200px;">
                        <source src="@item.ArchivoUrl" type="audio/mp3" />
                        Tu navegador no soporta el elemento
                        <code>audio</code>.
                    </audio>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        // Obtener el plan del usuario desde el ViewBag
        var userPlan = "@ViewBag.Plan"; // Se espera que ViewBag.Plan esté disponible en el controlador.

        // Intervalos de pausa
        var pauseIntervals = {
            'Free': 30000,  // 30 segundos para los usuarios Free
            'Estudiantil': 15000,  // 15 segundos para los usuarios Estudiantiles
            'Premium': 0, // Sin pausa para los usuarios Premium
            'Empresarial': 0 // Solo 1 pausa para los usuarios Empresariales
        };

        // Reproducir y pausar según el plan
        document.querySelectorAll('.audio-player').forEach(function(player) {
            var plan = userPlan;
            var interval;

            // Función para pausar la canción en el intervalo adecuado
            function pauseSong() {
                if (plan === 'Free' || plan === 'Estudiantil') {
                    // Pausar solo si la canción está reproduciéndose
                    if (!player.paused) {
                        player.pause();
                    }
                }
            }

            // Si el plan es Free o Estudiantil, aplicar pausa a intervalos
            if (plan === 'Free' || plan === 'Estudiantil') {
                interval = setInterval(function() {
                    pauseSong();
                }, pauseIntervals[plan]);
            }
        });
    </script>
}
