<!-- Views/Planes/MiembrosDelPlan.cshtml - Vista para gestionar miembros -->
@model List<Spotify.Modelos.Usuario>
@{
    ViewData["Title"] = "Gestionar Miembros";
}

<div class="container mt-4">
    <h2>Gestionar Miembros del Plan @ViewBag.Plan.Nombre</h2>
    
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Información del Plan</h5>
                </div>
                <div class="card-body">
                    <p><strong>Plan:</strong> @ViewBag.Plan.Nombre</p>
                    <p><strong>Miembros:</strong> @Model.Count/@ViewBag.Plan.MaximoUsuarios</p>
                    <p><strong>Espacios disponibles:</strong> @ViewBag.EspaciosDisponibles</p>
                </div>
            </div>
        </div>
        
        <div class="col-md-8">
            @if (ViewBag.EsAdministrador && ViewBag.EspaciosDisponibles > 0)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Invitar Usuario</h5>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label>Email del usuario a invitar:</label>
                            <div class="input-group">
                                <input type="email" id="emailInvitacion" class="form-control" placeholder="ejemplo@email.com">
                                <div class="input-group-append">
                                    <button class="btn btn-primary" onclick="invitarUsuario()">Invitar</button>
                                </div>
                            </div>
                        </div>
                        <div id="resultadoInvitacion"></div>
                    </div>
                </div>
            }
            else if (ViewBag.EspaciosDisponibles <= 0)
            {
                <div class="alert alert-warning">
                    Has alcanzado el límite máximo de usuarios para este plan.
                </div>
            }
            
            <div class="card">
                <div class="card-header">
                    <h5>Miembros del Plan</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Nombre</th>
                                    <th>Email</th>
                                    <th>Rol</th>
                                    <th>Fecha de Registro</th>
                                    @if (ViewBag.EsAdministrador)
                                    {
                                        <th>Acciones</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var miembro in Model)
                                {
                                    <tr>
                                        <td>@miembro.Nombre</td>
                                        <td>@miembro.</td>
                                        <td>
                                            @if (miembro.Id == ViewBag.Administrador.Id)
                                            {
                                                <span class="badge badge-primary">Administrador</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-secondary">Miembro</span>
                                            }
                                        </td>
                                        <td>@miembro.FechaRegistro.ToString("dd/MM/yyyy")</td>
                                        @if (ViewBag.EsAdministrador)
                                        {
                                            <td>
                                                @if (miembro.Id != ViewBag.Administrador.Id)
                                                {
                                                    <button class="btn btn-sm btn-danger" onclick="expulsarMiembro(@miembro.Id, '@miembro.Nombre')">
                                                        Expulsar
                                                    </button>
                                                }
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function invitarUsuario() {
    const email = document.getElementById('emailInvitacion').value;
    const resultadoDiv = document.getElementById('resultadoInvitacion');
    
    if (!email) {
        resultadoDiv.innerHTML = '<div class="alert alert-warning">Por favor ingresa un email válido.</div>';
        return;
    }
    
    fetch('/Planes/InvitarUsuario', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `email=${encodeURIComponent(email)}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            resultadoDiv.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
            document.getElementById('emailInvitacion').value = '';
            setTimeout(() => location.reload(), 2000);
        } else {
            resultadoDiv.innerHTML = `<div class="alert alert-danger">${data.message}</div>`;
        }
    })
    .catch(error => {
        resultadoDiv.innerHTML = '<div class="alert alert-danger">Error al enviar la invitación.</div>';
    });
}

function expulsarMiembro(miembroId, nombre) {
    if (confirm(`¿Estás seguro de que quieres expulsar a ${nombre} del plan?`)) {
        fetch('/Planes/ExpulsarMiembro', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `miembroId=${miembroId}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                location.reload();
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            alert('Error al expulsar al miembro.');
        });
    }
}
</script>