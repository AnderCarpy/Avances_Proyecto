@model Spotify.Modelos.Usuario
@{
    ViewData["Title"] = "Editar Perfil - BeatHouse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/css/Perfil.css" />

<div class="profile-container">
    <div class="profile-header">
        <div class="avatar-container">
            <div class="avatar-overlay" onclick="document.getElementById('avatarFile').click()">
               
            </div>
            <input type="file" id="avatarFile" name="avatarFile" accept="image/*" style="display:none" />
        </div>
        <div class="profile-info">
            <h1>Editar Perfil</h1>
            <p>Personaliza tu información en BeatHouse</p>
        </div>
    </div>

    @using (Html.BeginForm("EditarPerfil", "Usuarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Contraseña)
        @Html.HiddenFor(m => m.TipoUsuario)

        @Html.HiddenFor(m => m.Id)

        <div class="form-section">
            <h2>Información Personal</h2>
            <div class="form-group">
                @Html.LabelFor(m => m.Nombre)
                @Html.TextBoxFor(m => m.Nombre, new { @class = "form-input" })
                @Html.ValidationMessageFor(m => m.Nombre)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email, new { type = "email", @class = "form-input" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            
            <div class="form-group">
                <label>Miembro desde</label>
                <span>@Model.FechaRegistro.ToString("dd/MM/yyyy")</span>
            </div>
        </div>

        <div class="form-section">
            <h2>Seguridad</h2>

            <div class="form-group">
                <label for="currentPassword">Contraseña actual</label>
                <input type="password" id="currentPassword" name="currentPassword" class="form-input" />
                @Html.ValidationMessage("currentPassword", "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="newPassword">Nueva contraseña</label>
                <input type="password" id="newPassword" name="newPassword" class="form-input" />
                @Html.ValidationMessage("newPassword", "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="confirmPassword">Confirmar contraseña</label>
                <input type="password" id="confirmPassword" name="confirmPassword" class="form-input" />
                @Html.ValidationMessage("confirmPassword", "", new { @class = "text-danger" })
            </div>

        </div>


        @* Si es artista… *@
        @if ((Model.TipoUsuario ?? "").Equals("artista", StringComparison.OrdinalIgnoreCase))
        {
            <div class="form-section">
                <h2>Estadísticas de Artista</h2>
                <p>Álbumes: @(Model.Albums?.Count ?? 0)</p>
                <p>Canciones: @(Model.Canciones?.Count ?? 0)</p>
            </div>
        }


        <div class="form-section">
            <h2>Suscripción</h2>
            @if (Model.Plan != null)
            {
                <p>Plan: @Model.Plan.Nombre</p>
            }
            else
            {
                <p>Plan Gratuito</p>
                <a asp-controller="Planes" asp-action="Index">Actualizar a Premium</a>
            }
        </div>

        <div class="form-actions">
            <button type="button" onclick="history.back()" class="guardar-btn">Cancelar</button>
            <button type="submit" class="guardar-btn">Guardar Cambios</button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
</div>

